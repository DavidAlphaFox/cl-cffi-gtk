@c -----------------------------------------------------------------------------
@c File     : gtk-menu-widget.texi
@c License  : GNU General Public License (GPL)
@c Language : English
@c Author   : Dieter Kaiser
@c Date     : 05.04.2012
@c Revision : 06.04.2012
@c
@c Copyright (C) 2012 by Dieter Kaiser
@c -----------------------------------------------------------------------------

@section Manual Menu Creation

@ifnotinfo
@float Figure, figure-menu-widget
@caption{Manual Menu Creation}
@center @image{figures/menu-widget, 168pt}
@end float
@end ifnotinfo

GTK+ knows several classes related to the creation of menus.  @ref{example-menu}
shows how to create the menu manually.  @ref{example-menu-builder} shows
the UI defintion of a window with a menubar.

@subheading GtkMenuShell

A @code{GtkMenuShell} is the abstract base class used to derive the
@code{GtkMenu} and @code{GtkMenuBar} subclasses.

A @code{GtkMenuShell} is a container of @code{GtkMenuItem} objects arranged in a
list which can be navigated, selected, and activated by the user to perform
application functions. A @code{GtkMenuItem} can have a submenu associated with
it, allowing for nested hierarchical menus.

@subheading GtkMenuBar

The @code{GtkMenuBar} is a subclass of @code{GtkMenuShell} which contains one or
more @code{GtkMenuItems}. The result is a standard menu bar which can hold many
menu items.

@subheading GtkMenu

A @code{GtkMenu} is a @code{GtkMenuShell} that implements a drop down menu
consisting of  a list of @code{GtkMenuItem} objects which can be navigated and
activated by the user to perform application functions.

A @code{GtkMenu} is most commonly dropped down by activating a
@code{GtkMenuItem} in a @code{GtkMenuBar} or popped up by activating a
@code{GtkMenuItem} in another @code{GtkMenu}.

A @code{GtkMenu} can also be popped up by activating a @code{GtkOptionMenu}.
Other composite widgets such as the @code{GtkNotebook} can pop up a GtkMenu as
well.

Applications can display a @code{GtkMenu} as a popup menu by calling the
@code{gtk-menu-popup} function.

@c TODO: Implement an example with a signal handler which displays a popup menu
@c The example below shows how an application can pop up a menu when the
@c 3rd mouse button is pressed.

@subheading GtkMenuItem

The @code{GtkMenuItem} widget and the derived widgets are the only valid childs
for menus.  Their function is to correctly handle highlighting, alignment,
events and submenus.

As it derives from @code{GtkBin} it can hold any valid child widget, altough
only a few are really useful.

@subheading GtkCheckMenuItem

A @code{GtkCheckMenuItem} is a menu item that maintains the state of a boolean
value in addition to a @code{GtkMenuItem} usual role in activating application
code.

A check box indicating the state of the boolean value is displayed at the
left side of the @code{GtkMenuItem}.  Activating the @code{GtkMenuItem} toggles
the value.

@subheading GtkImageMenuItem

A @code{GtkImageMenuItem} is a menu item which has an icon next to the text
label.

Note that the user can disable display of menu icons, so make sure to still
fill in the text label.

@subheading GtkSeparatorMenuItem

The @code{GtkSeparatorMenuItem} is a separator used to group items within a
menu.  It displays a horizontal line with a shadow to make it appear sunken into
the interface.

@subheading GtkTearoffMenuItem

A @code{GtkTearoffMenuItem} is a special @code{GtkMenuItem} which is used to
tear off and reattach its menu.

When its menu is shown normally, the @code{GtkTearoffMenuItem} is drawn as a
dotted line indicating that the menu can be torn off.  Activating it causes its
menu to be torn off and displayed in its own window as a tearoff menu.

When its menu is shown as a tearoff menu, the @code{GtkTearoffMenuItem} is drawn
as dotted line which has a left pointing arrow graphic indicating that the
tearoff menu can be reattached.  Activating it will erase the tearoff menu
window.

@float Example, example-menu
@caption{Manual Menu Creation}
@end float
@verbatim
(defun example-menu ()
  (within-main-loop
    (setf (gtk-settings-gtk-shell-shows-app-menu (gtk-settings-get-default))
          nil)
    (setf (gtk-settings-gtk-shell-shows-menubar (gtk-settings-get-default))
          nil)
    (let ((window (make-instance 'gtk-window
                                 :type :toplevel
                                 :default-width 250
                                 :default-height 200
                                 :title "Example Menu Widget"))
          (vbox (make-instance 'gtk-box
                               :orientation :vertical)))
      (g-signal-connect window "destroy"
                        (lambda (widget)
                          (declare (ignore widget))
                          (leave-gtk-main)))
      ;; Create the menu-bar and the items of the menu-bar.
      (let ((menubar (make-instance 'gtk-menu-bar
                                    :visible t
                                    :can-focus nil))
            ;; Item file of the menu-bar.
            (item-file (make-instance 'gtk-menu-item
                                      :label "_Datei"
                                      :use-underline t))
            ;; Item edit of the menu-bar.
            (item-edit (make-instance 'gtk-menu-item
                                      :label "_Bearbeiten"
                                      :use-underline t))
            ;; Item help of the menu-bar.
            (item-help (make-instance 'gtk-menu-item
                                      :label "_Hilfe"
                                      :use-underline t)))
        ;; Create submenu for the item file.
        (let ((submenu (make-instance 'gtk-menu
                                      :visible t
                                      :can-focus nil))
              (item-file-new (make-instance 'gtk-image-menu-item
                                       :label "gtk-new"
                                       :use-underline t
                                       :use-stock t))
              (item-file-open (make-instance 'gtk-image-menu-item
                                        :label "gtk-open"
                                        :use-underline t
                                        :use-stock t))
              (item-file-save (make-instance 'gtk-image-menu-item
                                        :label "gtk-save"
                                        :user-underline t
                                        :use-stock t))
              (item-file-save-as (make-instance 'gtk-image-menu-item
                                                :label "gtk-save-as"
                                                :user-underline t
                                                :use-stock t))
              (item-file-quit (make-instance 'gtk-image-menu-item
                                             :label "gtk-quit"
                                             :user-underline t
                                             :use-stock t)))
          ;; Add the items to to the submenu.
          (gtk-menu-shell-append submenu item-file-new)
          (gtk-menu-shell-append submenu item-file-open)
          (gtk-menu-shell-append submenu item-file-save)
          (gtk-menu-shell-append submenu item-file-save-as)
          ;; Insert a GtkSeparatorMenuItem.
          (gtk-menu-shell-append submenu (gtk-separator-menu-item-new))
          ;; Add the item file quit to the submenu
          (gtk-menu-shell-append submenu item-file-quit)
          ;; Set the submenu of the item file.
          (gtk-menu-item-set-submenu item-file submenu))
        ;; Create submenu for the item edit.
        (let ((submenu (make-instance 'gtk-menu
                                      :visible t
                                      :can-focus nil))
              (item-edit-cut (make-instance 'gtk-image-menu-item
                                            :label "gtk-cut"
                                            :use-underline t
                                            :use-stock t))
              (item-edit-copy (make-instance 'gtk-image-menu-item
                                             :label "gtk-copy"
                                             :use-underline t
                                             :use-stock t))
              (item-edit-paste (make-instance 'gtk-image-menu-item
                                              :label "gtk-paste"
                                              :user-underline t
                                              :use-stock t))
              (item-edit-delete (make-instance 'gtk-image-menu-item
                                               :label "gtk-delete"
                                               :user-underline t
                                               :use-stock t)))
          ;; Add the items to to the submenu.
          (gtk-menu-shell-append submenu item-edit-cut)
          (gtk-menu-shell-append submenu item-edit-copy)
          (gtk-menu-shell-append submenu item-edit-paste)
          (gtk-menu-shell-append submenu item-edit-delete)
          ;; Set the submenu of the item edit.
          (gtk-menu-item-set-submenu item-edit submenu))
        ;; Create submenu for the item help.
        (let ((submenu (make-instance 'gtk-menu
                                      :visible t
                                      :can-focus nil))
              (item-help-about (make-instance 'gtk-image-menu-item
                                              :label "gtk-about"
                                              :use-underline t
                                              :use-stock t)))
          ;; Add the items to to the submenu.
          (gtk-menu-shell-append submenu item-help-about)
          ;; Set the submenu of the item help.
          (gtk-menu-item-set-submenu item-help submenu))
        ;; Add the items file, edit, and help into the menubar.
        (gtk-menu-shell-append menubar item-file)
        (gtk-menu-shell-append menubar item-edit)
        (gtk-menu-shell-append menubar item-help)
        ;; Pack the menubar into the vbox.
        (gtk-box-pack-start vbox menubar :expand nil))
        ;; Pack a text view into the vbox
        (gtk-box-pack-start vbox (make-instance 'gtk-text-view))
      ;; Pack the vbox into the window.
      (gtk-container-add window vbox)
      ;; Show the window.
      (gtk-widget-show-all window))))
@end verbatim

@float Example, example-menu-builder
@caption{UI Definition of a menu}
@end float
@verbatim
<?xml version="1.0" encoding="UTF-8"?>
<interface>
  <requires lib="gtk+" version="2.24"/>
  <object class="GtkWindow" id="window">
    <property name="can_focus">False</property>
    <property name="title" translatable="yes">Example Menu Builder</property>
    <property name="has_resize_grip">False</property>
    <child>
      <object class="GtkMenuBar" id="menubar">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <child>
          <object class="GtkMenuItem" id="File">
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <property name="use_action_appearance">False</property>
            <property name="label" translatable="yes">_Datei</property>
            <property name="use_underline">True</property>
            <child type="submenu">
              <object class="GtkMenu" id="menu1">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <child>
                  <object class="GtkImageMenuItem" id="imagemenuitem1">
                    <property name="label">gtk-new</property>
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="use_action_appearance">False</property>
                    <property name="use_underline">True</property>
                    <property name="use_stock">True</property>
                  </object>
                </child>
                <child>
                  <object class="GtkImageMenuItem" id="imagemenuitem2">
                    <property name="label">gtk-open</property>
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="use_action_appearance">False</property>
                    <property name="use_underline">True</property>
                    <property name="use_stock">True</property>
                  </object>
                </child>
                <child>
                  <object class="GtkImageMenuItem" id="imagemenuitem3">
                    <property name="label">gtk-save</property>
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="use_action_appearance">False</property>
                    <property name="use_underline">True</property>
                    <property name="use_stock">True</property>
                  </object>
                </child>
                <child>
                  <object class="GtkImageMenuItem" id="imagemenuitem4">
                    <property name="label">gtk-save-as</property>
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="use_action_appearance">False</property>
                    <property name="use_underline">True</property>
                    <property name="use_stock">True</property>
                  </object>
                </child>
                <child>
                  <object class="GtkSeparatorMenuItem"
                             id="separatormenuitem1">
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="use_action_appearance">False</property>
                  </object>
                </child>
                <child>
                  <object class="GtkImageMenuItem" id="imagemenuitem5">
                    <property name="label">gtk-quit</property>
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="use_action_appearance">False</property>
                    <property name="use_underline">True</property>
                    <property name="use_stock">True</property>
                  </object>
                </child>
              </object>
            </child>
          </object>
        </child>
        <child>
          <object class="GtkMenuItem" id="Edit">
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <property name="use_action_appearance">False</property>
            <property name="label" translatable="yes">_Bearbeiten</property>
            <property name="use_underline">True</property>
            <child type="submenu">
              <object class="GtkMenu" id="menu2">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <child>
                  <object class="GtkImageMenuItem" id="imagemenuitem6">
                    <property name="label">gtk-cut</property>
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="use_action_appearance">False</property>
                    <property name="use_underline">True</property>
                    <property name="use_stock">True</property>
                  </object>
                </child>
                <child>
                  <object class="GtkImageMenuItem" id="imagemenuitem7">
                    <property name="label">gtk-copy</property>
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="use_action_appearance">False</property>
                    <property name="use_underline">True</property>
                    <property name="use_stock">True</property>
                  </object>
                </child>
                <child>
                  <object class="GtkImageMenuItem" id="imagemenuitem8">
                    <property name="label">gtk-paste</property>
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="use_action_appearance">False</property>
                    <property name="use_underline">True</property>
                    <property name="use_stock">True</property>
                  </object>
                </child>
                <child>
                  <object class="GtkImageMenuItem" id="imagemenuitem9">
                    <property name="label">gtk-delete</property>
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="use_action_appearance">False</property>
                    <property name="use_underline">True</property>
                    <property name="use_stock">True</property>
                  </object>
                </child>
              </object>
            </child>
          </object>
        </child>
        <child>
          <object class="GtkMenuItem" id="Help">
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <property name="use_action_appearance">False</property>
            <property name="label" translatable="yes">_Hilfe</property>
            <property name="use_underline">True</property>
            <child type="submenu">
              <object class="GtkMenu" id="menu3">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <child>
                  <object class="GtkImageMenuItem" id="imagemenuitem10">
                    <property name="label">gtk-about</property>
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="use_action_appearance">False</property>
                    <property name="use_underline">True</property>
                    <property name="use_stock">True</property>
                  </object>
                </child>
              </object>
            </child>
          </object>
        </child>
      </object>
    </child>
  </object>
</interface>

(defun example-menu-builder ()
  (within-main-loop
    (let ((builder (make-instance 'gtk-builder)))
      (gtk-builder-add-from-file builder "example-menu-builder.ui")
      (g-signal-connect (gtk-builder-get-object builder "window") "destroy"
                        (lambda (widget)
                          (declare (ignore widget))
                          (leave-gtk-main)))
      (gtk-widget-show (gtk-builder-get-object builder "window")))))
@end verbatim

